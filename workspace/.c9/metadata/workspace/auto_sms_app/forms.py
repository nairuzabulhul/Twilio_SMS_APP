{"filter":false,"title":"forms.py","tooltip":"/auto_sms_app/forms.py","undoManager":{"mark":100,"position":100,"stack":[[{"start":{"row":51,"column":32},"end":{"row":51,"column":33},"action":"insert","lines":["a"],"id":1923}],[{"start":{"row":51,"column":33},"end":{"row":51,"column":34},"action":"insert","lines":["n"],"id":1924}],[{"start":{"row":51,"column":34},"end":{"row":51,"column":35},"action":"insert","lines":["e"],"id":1925}],[{"start":{"row":51,"column":35},"end":{"row":51,"column":36},"action":"insert","lines":["d"],"id":1926}],[{"start":{"row":51,"column":36},"end":{"row":51,"column":37},"action":"insert","lines":["_"],"id":1927}],[{"start":{"row":51,"column":37},"end":{"row":51,"column":38},"action":"insert","lines":["d"],"id":1928}],[{"start":{"row":51,"column":38},"end":{"row":51,"column":39},"action":"insert","lines":["a"],"id":1929}],[{"start":{"row":51,"column":29},"end":{"row":51,"column":39},"action":"remove","lines":["cleaned_da"],"id":1930},{"start":{"row":51,"column":29},"end":{"row":51,"column":41},"action":"insert","lines":["cleaned_data"]}],[{"start":{"row":51,"column":41},"end":{"row":51,"column":43},"action":"insert","lines":["[]"],"id":1931}],[{"start":{"row":51,"column":42},"end":{"row":51,"column":44},"action":"insert","lines":["''"],"id":1932}],[{"start":{"row":51,"column":43},"end":{"row":51,"column":44},"action":"insert","lines":["m"],"id":1933}],[{"start":{"row":51,"column":44},"end":{"row":51,"column":45},"action":"insert","lines":["e"],"id":1934}],[{"start":{"row":51,"column":45},"end":{"row":51,"column":46},"action":"insert","lines":["s"],"id":1935}],[{"start":{"row":51,"column":46},"end":{"row":51,"column":47},"action":"insert","lines":["s"],"id":1936}],[{"start":{"row":51,"column":47},"end":{"row":51,"column":48},"action":"insert","lines":["a"],"id":1937}],[{"start":{"row":51,"column":48},"end":{"row":51,"column":49},"action":"insert","lines":["g"],"id":1938}],[{"start":{"row":51,"column":49},"end":{"row":51,"column":50},"action":"insert","lines":["e"],"id":1939}],[{"start":{"row":38,"column":30},"end":{"row":38,"column":31},"action":"remove","lines":["."],"id":1940}],[{"start":{"row":38,"column":29},"end":{"row":38,"column":30},"action":"remove","lines":["f"],"id":1941}],[{"start":{"row":38,"column":28},"end":{"row":38,"column":29},"action":"remove","lines":["l"],"id":1942},{"start":{"row":38,"column":27},"end":{"row":38,"column":28},"action":"remove","lines":["e"]},{"start":{"row":38,"column":26},"end":{"row":38,"column":27},"action":"remove","lines":["s"]}],[{"start":{"row":39,"column":26},"end":{"row":39,"column":27},"action":"remove","lines":["s"],"id":1943}],[{"start":{"row":39,"column":26},"end":{"row":39,"column":27},"action":"remove","lines":["e"],"id":1944}],[{"start":{"row":39,"column":26},"end":{"row":39,"column":27},"action":"remove","lines":["l"],"id":1945}],[{"start":{"row":39,"column":26},"end":{"row":39,"column":27},"action":"remove","lines":["f"],"id":1946}],[{"start":{"row":39,"column":26},"end":{"row":39,"column":27},"action":"remove","lines":["."],"id":1947}],[{"start":{"row":40,"column":26},"end":{"row":40,"column":27},"action":"remove","lines":["s"],"id":1948}],[{"start":{"row":40,"column":26},"end":{"row":40,"column":27},"action":"remove","lines":["e"],"id":1949}],[{"start":{"row":40,"column":26},"end":{"row":40,"column":27},"action":"remove","lines":["l"],"id":1950}],[{"start":{"row":40,"column":26},"end":{"row":40,"column":27},"action":"remove","lines":["f"],"id":1951}],[{"start":{"row":40,"column":26},"end":{"row":40,"column":27},"action":"remove","lines":["."],"id":1952}],[{"start":{"row":18,"column":0},"end":{"row":18,"column":73},"action":"remove","lines":["client        = (settings.TWILIO_ACCOUNT_SID, settings.TWILIO_AUTH_TOKEN)"],"id":1953},{"start":{"row":18,"column":0},"end":{"row":18,"column":82},"action":"insert","lines":["client = TwilioRestClient(settings.TWILIO_ACCOUNT_SID, settings.TWILIO_AUTH_TOKEN)"]}],[{"start":{"row":38,"column":8},"end":{"row":40,"column":56},"action":"remove","lines":["client_number_1 = cleaned_data['client_number1']","        client_number_2 = cleaned_data['client_number_2']","        client_number_3 = cleaned_data['client_number3']"],"id":1954},{"start":{"row":38,"column":8},"end":{"row":40,"column":65},"action":"insert","lines":[" client_number_field1 = cleaned_data['client_number1']","            client_number_field2 = cleaned_data['client_number2']","            client_number_field3 = cleaned_data['client_number3']"]}],[{"start":{"row":39,"column":8},"end":{"row":39,"column":12},"action":"remove","lines":["    "],"id":1955}],[{"start":{"row":39,"column":8},"end":{"row":39,"column":9},"action":"insert","lines":[" "],"id":1956}],[{"start":{"row":40,"column":9},"end":{"row":40,"column":10},"action":"remove","lines":[" "],"id":1957}],[{"start":{"row":40,"column":9},"end":{"row":40,"column":10},"action":"remove","lines":[" "],"id":1958}],[{"start":{"row":40,"column":9},"end":{"row":40,"column":10},"action":"remove","lines":[" "],"id":1959}],[{"start":{"row":43,"column":8},"end":{"row":43,"column":83},"action":"remove","lines":["cleaned_client_number = client_number_1 + client_number_2 + client_number_3"],"id":1960},{"start":{"row":43,"column":8},"end":{"row":43,"column":91},"action":"insert","lines":[" client_number = client_number_field1 + client_number_field2 + client_number_field3"]}],[{"start":{"row":38,"column":8},"end":{"row":38,"column":9},"action":"remove","lines":[" "],"id":1961}],[{"start":{"row":39,"column":8},"end":{"row":39,"column":9},"action":"remove","lines":[" "],"id":1962}],[{"start":{"row":40,"column":8},"end":{"row":40,"column":9},"action":"remove","lines":[" "],"id":1963}],[{"start":{"row":43,"column":8},"end":{"row":43,"column":9},"action":"remove","lines":[" "],"id":1964}],[{"start":{"row":50,"column":8},"end":{"row":52,"column":8},"action":"remove","lines":["client_number = self.cleaned_data['client_number']","        message       = self.cleaned_data['message']","        "],"id":1965},{"start":{"row":50,"column":8},"end":{"row":51,"column":57},"action":"insert","lines":["client_number = self.cleaned_data['client_number']","        message       = self.cleaned_data ['message'] # m"]}],[{"start":{"row":51,"column":56},"end":{"row":51,"column":57},"action":"remove","lines":["m"],"id":1966}],[{"start":{"row":44,"column":8},"end":{"row":45,"column":0},"action":"insert","lines":["",""],"id":1967},{"start":{"row":45,"column":0},"end":{"row":45,"column":8},"action":"insert","lines":["        "]}],[{"start":{"row":45,"column":8},"end":{"row":45,"column":9},"action":"insert","lines":["r"],"id":1968}],[{"start":{"row":45,"column":9},"end":{"row":45,"column":10},"action":"insert","lines":["e"],"id":1969}],[{"start":{"row":45,"column":10},"end":{"row":45,"column":11},"action":"insert","lines":["r"],"id":1970}],[{"start":{"row":45,"column":11},"end":{"row":45,"column":12},"action":"insert","lines":["t"],"id":1971}],[{"start":{"row":45,"column":12},"end":{"row":45,"column":13},"action":"insert","lines":["u"],"id":1972}],[{"start":{"row":45,"column":12},"end":{"row":45,"column":13},"action":"remove","lines":["u"],"id":1973}],[{"start":{"row":45,"column":11},"end":{"row":45,"column":12},"action":"remove","lines":["t"],"id":1974}],[{"start":{"row":45,"column":10},"end":{"row":45,"column":11},"action":"remove","lines":["r"],"id":1975}],[{"start":{"row":45,"column":10},"end":{"row":45,"column":11},"action":"insert","lines":["t"],"id":1976}],[{"start":{"row":45,"column":11},"end":{"row":45,"column":12},"action":"insert","lines":["u"],"id":1977}],[{"start":{"row":45,"column":12},"end":{"row":45,"column":13},"action":"insert","lines":["r"],"id":1978}],[{"start":{"row":45,"column":13},"end":{"row":45,"column":14},"action":"insert","lines":["n"],"id":1979}],[{"start":{"row":45,"column":14},"end":{"row":45,"column":15},"action":"insert","lines":[" "],"id":1980}],[{"start":{"row":45,"column":15},"end":{"row":45,"column":16},"action":"insert","lines":["c"],"id":1981}],[{"start":{"row":45,"column":16},"end":{"row":45,"column":17},"action":"insert","lines":["l"],"id":1982}],[{"start":{"row":45,"column":17},"end":{"row":45,"column":18},"action":"insert","lines":["e"],"id":1983}],[{"start":{"row":45,"column":18},"end":{"row":45,"column":19},"action":"insert","lines":["a"],"id":1984}],[{"start":{"row":45,"column":15},"end":{"row":45,"column":19},"action":"remove","lines":["clea"],"id":1985},{"start":{"row":45,"column":15},"end":{"row":45,"column":27},"action":"insert","lines":["cleaned_data"]}],[{"start":{"row":33,"column":4},"end":{"row":45,"column":27},"action":"remove","lines":["def clean(self):","        ","        # supuer clean","        cleaned_data = super(TwilioSMSForm, self).clean() ","        ","        client_number_field1 = cleaned_data['client_number1']","        client_number_field2 = cleaned_data['client_number2']","        client_number_field3 = cleaned_data['client_number3']","        ","        # adding client numbers togther to have 10 valid phone number","        client_number = client_number_field1 + client_number_field2 + client_number_field3","        ","        return cleaned_data"],"id":1986},{"start":{"row":33,"column":4},"end":{"row":59,"column":27},"action":"insert","lines":["def clean(self):","        \"\"\"Since the client number fields depend on one-another, we will override the form's","           clean() method to perform validation across the three fields.","        \"\"\"","        # Call the parent class `clean()` method to perform default validation of the fields","        cleaned_data = super(SMSForm, self).clean() ##3 ","        ","        #get data from the fields #4","        try:","            client_number_field1 = cleaned_data['client_number1']","            client_number_field2 = cleaned_data['client_number2']","            client_number_field3 = cleaned_data['client_number3']","        except KeyError as e:","            # If there are any key errors, then one of the above was not complete.","            raise forms.ValidationError('Please enter a complete, 10-digit US phone number.')","        ","        client_number = client_number_field1 + client_number_field2 + client_number_field3 ##5 ","","        #Validate client's phone number using Twilio lookup library ##6","        try:","            validate_number = lookup_client.phone_numbers.get(client_number, include_carrier_info=True)","            self.cleaned_data['client_number'] = validate_number.phone_number","        except TwilioRestException as e: ","            #Invalid phone number error ##7","            raise forms.ValidationError(\"This is not a valid US phone number. Please try again.\")","        ","        return cleaned_data"]}],[{"start":{"row":38,"column":34},"end":{"row":38,"column":35},"action":"remove","lines":["r"],"id":1987}],[{"start":{"row":38,"column":33},"end":{"row":38,"column":34},"action":"remove","lines":["o"],"id":1988}],[{"start":{"row":38,"column":32},"end":{"row":38,"column":33},"action":"remove","lines":["F"],"id":1989}],[{"start":{"row":38,"column":31},"end":{"row":38,"column":32},"action":"remove","lines":["S"],"id":1990}],[{"start":{"row":38,"column":30},"end":{"row":38,"column":31},"action":"remove","lines":["M"],"id":1991}],[{"start":{"row":38,"column":29},"end":{"row":38,"column":30},"action":"remove","lines":["S"],"id":1992}],[{"start":{"row":38,"column":29},"end":{"row":38,"column":30},"action":"remove","lines":["m"],"id":1993}],[{"start":{"row":38,"column":29},"end":{"row":38,"column":30},"action":"insert","lines":["T"],"id":1994}],[{"start":{"row":38,"column":30},"end":{"row":38,"column":31},"action":"insert","lines":["w"],"id":1995}],[{"start":{"row":38,"column":31},"end":{"row":38,"column":32},"action":"insert","lines":["i"],"id":1996}],[{"start":{"row":38,"column":32},"end":{"row":38,"column":33},"action":"insert","lines":["l"],"id":1997}],[{"start":{"row":38,"column":29},"end":{"row":38,"column":33},"action":"remove","lines":["Twil"],"id":1998},{"start":{"row":38,"column":29},"end":{"row":38,"column":42},"action":"insert","lines":["TwilioSMSForm"]}],[{"start":{"row":62,"column":4},"end":{"row":75,"column":4},"action":"remove","lines":["def send_sms_message(self):","        ","        ##retrieve cleaned data","        client_number = self.cleaned_data['client_number']","        message       = self.cleaned_data ['message'] # ","        ","        # creating a message and send it to the client","        return client.messages.create(","            from_ = twilio_number,","            to    = client_number,","            body  = message","            )","        ","    "],"id":1999},{"start":{"row":62,"column":4},"end":{"row":95,"column":0},"action":"insert","lines":[" def send_twilio_message(self):","        \"\"\"Use Twilio to send a text message to the phone number provided by the user in this form.","","           :return: True if message sends successfully, False if send message fails for any reason.","                    Failures will be added to the form's non-field errors.","        \"\"\"","        # add three fields tother ##1","        # client_number = self.cleaned_data['client_number1'] + self.cleaned_data['client_number2'] + self.cleaned_data['client_number3']","        client_number = self.cleaned_data['client_number']","        message       = self.cleaned_data ['message'] # message ##2 ","        ","        try:","            #Create an SMS message  ##2","            return client.messages.create(","             from_ = settings.TWILIO_PHONE_NUMBER,","             to    = client_number,","             body  = message      ","            )","            return True","        except TwilioRestException as e:","            # Report form-level errors, if Twilio fails to send the SMS for some reason.","            if e.code == 21608:","                # Code 21608 indicates a phone number that has not been verified            ","                self.add_error(None,","                               _('SMS could not be sent the phone number '","                                 'provided has not been verified with Twilio.'))","            else:","                # General message for any other failure to connect to Twilio or send the SMS.","                self.add_error(None,","                               _('Error connecting with Twilio. Your phone number is valid '","                                 'but we could not connect to Twilio at this time. '","                                 'Please try again later.'))","            return False",""]}],[{"start":{"row":63,"column":3},"end":{"row":68,"column":37},"action":"remove","lines":["     \"\"\"Use Twilio to send a text message to the phone number provided by the user in this form.","","           :return: True if message sends successfully, False if send message fails for any reason.","                    Failures will be added to the form's non-field errors.","        \"\"\"","        # add three fields tother ##1"],"id":2000}],[{"start":{"row":63,"column":2},"end":{"row":63,"column":3},"action":"remove","lines":[" "],"id":2001}],[{"start":{"row":63,"column":1},"end":{"row":63,"column":2},"action":"remove","lines":[" "],"id":2002}],[{"start":{"row":63,"column":0},"end":{"row":63,"column":1},"action":"remove","lines":[" "],"id":2003}],[{"start":{"row":62,"column":35},"end":{"row":63,"column":0},"action":"remove","lines":["",""],"id":2004}],[{"start":{"row":62,"column":35},"end":{"row":63,"column":0},"action":"insert","lines":["",""],"id":2005},{"start":{"row":63,"column":0},"end":{"row":63,"column":9},"action":"insert","lines":["         "]}],[{"start":{"row":63,"column":8},"end":{"row":64,"column":137},"action":"remove","lines":[" ","        # client_number = self.cleaned_data['client_number1'] + self.cleaned_data['client_number2'] + self.cleaned_data['client_number3']"],"id":2006}],[{"start":{"row":63,"column":4},"end":{"row":63,"column":8},"action":"remove","lines":["    "],"id":2007}],[{"start":{"row":63,"column":0},"end":{"row":63,"column":4},"action":"remove","lines":["    "],"id":2008}],[{"start":{"row":18,"column":0},"end":{"row":19,"column":44},"action":"remove","lines":["client = TwilioRestClient(settings.TWILIO_ACCOUNT_SID, settings.TWILIO_AUTH_TOKEN)","twilio_number = settings.TWILIO_PHONE_NUMBER"],"id":2009},{"start":{"row":18,"column":0},"end":{"row":20,"column":82},"action":"insert","lines":["#Import credentials from settings.py to verify the phone number ","lookup_client = TwilioLookupsClient(settings.TWILIO_ACCOUNT_SID, settings.TWILIO_AUTH_TOKEN)","client = TwilioRestClient(settings.TWILIO_ACCOUNT_SID, settings.TWILIO_AUTH_TOKEN)"]}],[{"start":{"row":16,"column":0},"end":{"row":17,"column":26},"action":"remove","lines":["","#Import Twilio Credentials"],"id":2010}],[{"start":{"row":62,"column":14},"end":{"row":62,"column":28},"action":"remove","lines":["twilio_message"],"id":2011},{"start":{"row":62,"column":14},"end":{"row":62,"column":15},"action":"insert","lines":["s"]}],[{"start":{"row":62,"column":15},"end":{"row":62,"column":16},"action":"insert","lines":["m"],"id":2012}],[{"start":{"row":62,"column":16},"end":{"row":62,"column":17},"action":"insert","lines":["s"],"id":2013}],[{"start":{"row":62,"column":17},"end":{"row":62,"column":18},"action":"insert","lines":["_"],"id":2014}],[{"start":{"row":62,"column":18},"end":{"row":62,"column":19},"action":"insert","lines":["m"],"id":2015}],[{"start":{"row":62,"column":19},"end":{"row":62,"column":20},"action":"insert","lines":["e"],"id":2016}],[{"start":{"row":62,"column":20},"end":{"row":62,"column":21},"action":"insert","lines":["s"],"id":2017}],[{"start":{"row":62,"column":21},"end":{"row":62,"column":22},"action":"insert","lines":["s"],"id":2018}],[{"start":{"row":62,"column":22},"end":{"row":62,"column":23},"action":"insert","lines":["a"],"id":2019}],[{"start":{"row":62,"column":23},"end":{"row":62,"column":24},"action":"insert","lines":["g"],"id":2020}],[{"start":{"row":62,"column":24},"end":{"row":62,"column":25},"action":"insert","lines":["e"],"id":2021}],[{"start":{"row":62,"column":4},"end":{"row":62,"column":5},"action":"remove","lines":[" "],"id":2022}],[{"start":{"row":0,"column":0},"end":{"row":92,"column":4},"action":"remove","lines":["import twilio","from twilio.rest import TwilioRestClient","from twilio.rest.exceptions import TwilioRestException","from twilio.rest.lookups import TwilioLookupsClient","","# Then, import Django functions","from django import forms","from django.http import HttpResponse","from django.shortcuts import render","from django.template import loader","from django.shortcuts import render_to_response","from django.template import RequestContext","from django.http import HttpResponseRedirect","from django.conf import settings","from django.shortcuts import render","","","#Import credentials from settings.py to verify the phone number ","lookup_client = TwilioLookupsClient(settings.TWILIO_ACCOUNT_SID, settings.TWILIO_AUTH_TOKEN)","client = TwilioRestClient(settings.TWILIO_ACCOUNT_SID, settings.TWILIO_AUTH_TOKEN)","","#Create a form that takes user phone number and message","class TwilioSMSForm(forms.Form):","    ","    #step1 : retrieve input from the the three input fields","    client_number_field_1 = forms.CharField(label=\"client_number1\", min_length=3, max_length=3),","    client_number_field_2 = forms.CharField(label=\"client_number2\", min_length=3, max_length=3),","    client_number_field_3 = forms.CharField(label=\"client_number3\", min_length=4, max_length=4),","    ","    message = forms.CharField(label=\"message\")","    ","    ","    #step 2 : ceate a clean data function","    def clean(self):","        \"\"\"Since the client number fields depend on one-another, we will override the form's","           clean() method to perform validation across the three fields.","        \"\"\"","        # Call the parent class `clean()` method to perform default validation of the fields","        cleaned_data = super(TwilioSMSForm, self).clean() ##3 ","        ","        #get data from the fields #4","        try:","            client_number_field1 = cleaned_data['client_number1']","            client_number_field2 = cleaned_data['client_number2']","            client_number_field3 = cleaned_data['client_number3']","        except KeyError as e:","            # If there are any key errors, then one of the above was not complete.","            raise forms.ValidationError('Please enter a complete, 10-digit US phone number.')","        ","        client_number = client_number_field1 + client_number_field2 + client_number_field3 ##5 ","","        #Validate client's phone number using Twilio lookup library ##6","        try:","            validate_number = lookup_client.phone_numbers.get(client_number, include_carrier_info=True)","            self.cleaned_data['client_number'] = validate_number.phone_number","        except TwilioRestException as e: ","            #Invalid phone number error ##7","            raise forms.ValidationError(\"This is not a valid US phone number. Please try again.\")","        ","        return cleaned_data","        ","    #step2:create a function that sends sms messges to clients","    def send_sms_message(self):","","        client_number = self.cleaned_data['client_number']","        message       = self.cleaned_data ['message'] # message ##2 ","        ","        try:","            #Create an SMS message  ##2","            return client.messages.create(","             from_ = settings.TWILIO_PHONE_NUMBER,","             to    = client_number,","             body  = message      ","            )","            return True","        except TwilioRestException as e:","            # Report form-level errors, if Twilio fails to send the SMS for some reason.","            if e.code == 21608:","                # Code 21608 indicates a phone number that has not been verified            ","                self.add_error(None,","                               _('SMS could not be sent the phone number '","                                 'provided has not been verified with Twilio.'))","            else:","                # General message for any other failure to connect to Twilio or send the SMS.","                self.add_error(None,","                               _('Error connecting with Twilio. Your phone number is valid '","                                 'but we could not connect to Twilio at this time. '","                                 'Please try again later.'))","            return False","","    ","    ","    "],"id":2023},{"start":{"row":0,"column":0},"end":{"row":99,"column":0},"action":"insert","lines":["# Nairuz: I changed the order of the imports to match standard practice,","#         which is...","","# Do imports from the Python lib first","","# Then, import from third-party packages","import twilio","from twilio.rest import TwilioRestClient","from twilio.rest.exceptions import TwilioRestException","from twilio.rest.lookups import TwilioLookupsClient","","# Then, import Django functions","from django import forms","from django.http import HttpResponse","from django.shortcuts import render","from django.template import loader","from django.shortcuts import render_to_response","from django.template import RequestContext","from django.http import HttpResponseRedirect","from django.conf import settings","from django.shortcuts import render","from django.utils.safestring import mark_safe","from django.utils.translation import ugettext as _","","# Finally, import from local Python modules (if any)","","#Import credentials from settings.py to verify the phone number ","lookup_client = TwilioLookupsClient(settings.TWILIO_ACCOUNT_SID, settings.TWILIO_AUTH_TOKEN)","client = TwilioRestClient(settings.TWILIO_ACCOUNT_SID, settings.TWILIO_AUTH_TOKEN)","","class SMSForm(forms.Form): ","    ","    #Create form fields with man and min length, labels are the same as the names in the template ##1","    client_number1 = forms.CharField(label='client_number1', min_length=3,  max_length=3, required=True) ","    client_number2 = forms.CharField(label='client_number2', min_length=3,  max_length=3, required=True)","    client_number3 = forms.CharField(label=\"client_number3\", min_length=4,  max_length=4, required=True)","    message       = forms.CharField(label='message')","    ","    def clean(self):","        \"\"\"Since the client number fields depend on one-another, we will override the form's","           clean() method to perform validation across the three fields.","        \"\"\"","        # Call the parent class `clean()` method to perform default validation of the fields","        cleaned_data = super(SMSForm, self).clean() ##3 ","        ","        #get data from the fields #4","        try:","            client_number_field1 = cleaned_data['client_number1']","            client_number_field2 = cleaned_data['client_number2']","            client_number_field3 = cleaned_data['client_number3']","        except KeyError as e:","            # If there are any key errors, then one of the above was not complete.","            raise forms.ValidationError('Please enter a complete, 10-digit US phone number.')","        ","        client_number = client_number_field1 + client_number_field2 + client_number_field3 ##5 ","","        #Validate client's phone number using Twilio lookup library ##6","        try:","            validate_number = lookup_client.phone_numbers.get(client_number, include_carrier_info=True)","            self.cleaned_data['client_number'] = validate_number.phone_number","        except TwilioRestException as e: ","            #Invalid phone number error ##7","            raise forms.ValidationError(\"This is not a valid US phone number. Please try again.\")","        ","        return cleaned_data","","    def send_twilio_message(self):","        \"\"\"Use Twilio to send a text message to the phone number provided by the user in this form.","","           :return: True if message sends successfully, False if send message fails for any reason.","                    Failures will be added to the form's non-field errors.","        \"\"\"","        # add three fields tother ##1","        # client_number = self.cleaned_data['client_number1'] + self.cleaned_data['client_number2'] + self.cleaned_data['client_number3']","        client_number = self.cleaned_data['client_number']","        message       = self.cleaned_data ['message'] # message ##2 ","        ","        try:","            #Create an SMS message  ##2","            return client.messages.create(","             from_ = settings.TWILIO_PHONE_NUMBER,","             to    = client_number,","             body  = message      ","            )","            return True","        except TwilioRestException as e:","            # Report form-level errors, if Twilio fails to send the SMS for some reason.","            if e.code == 21608:","                # Code 21608 indicates a phone number that has not been verified            ","                self.add_error(None,","                               _('SMS could not be sent the phone number '","                                 'provided has not been verified with Twilio.'))","            else:","                # General message for any other failure to connect to Twilio or send the SMS.","                self.add_error(None,","                               _('Error connecting with Twilio. Your phone number is valid '","                                 'but we could not connect to Twilio at this time. '","                                 'Please try again later.'))","            return False",""]}]]},"ace":{"folds":[],"scrolltop":1968.333396911621,"scrollleft":0,"selection":{"start":{"row":74,"column":45},"end":{"row":74,"column":45},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":0},"timestamp":1467743062691,"hash":"2093f8365f0c48e8a5689ac01f497fdf45222517"}